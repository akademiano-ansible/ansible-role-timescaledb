---
# tasks file for egeneralov.timescaledb

- name: "Timescaledb | Assert | if {{ pgdg_version }} is supported by role"
  assert:
    that:
      - "pgdg_version in pgdg_supported_versions"
    fail_msg: "{{ pgdg_version }} is not supported version for timescaledb"
    success_msg: "Provisioning timescaledb over postgresql=={{ pgdg_version }}"

- name: Timescaledb | Repository | Import key
  apt_key:
    url: "{{ tdb_repo_key_url }}"
  register: tdb_repo_key
  when: ansible_distribution == "Debian"
  become: yes

- name: Timescaledb | Repository | Import key
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: "0x55ee6bf7698e3d58d72c0dd9ecb3980cc59e610b"
  when: ansible_distribution == "Ubuntu"
  become: yes

- name: Timescaledb | Repository |  Add repository
  apt_repository:
    repo: "{{ tdb_repo_url[ansible_distribution] }}"
    filename: timescaledb
  register: tdb_repo
  become: yes

- name: Timescaledb | Install | Apt update
  apt:
    update_cache: "{% if tdb_repo is changed or tdb_repo_key is changed %}yes{% else %}no{% endif %}"
  become: yes

- name: Timescaledb | Install | Install
  apt:
    name: "{{ item }}-{{ pgdg_version }}"
  loop: "{{ tdb_base_packages  }}"
  become: yes
  notify: postgresql restart

- name: Timescaledb | Configure | postgresql.conf
  lineinfile:
    path: "/etc/postgresql/{{ pgdg_version }}/main/postgresql.conf"
    regexp: '#?{{ item.k }} =.*'
    line: '{{ item.k }} = {{ item.v }}'
    state: "{{ item.state | default('present') }}"
  with_items: "{{ tdb_postgresql_conf }}"
  register: tdb_conf
  become: yes
  notify: postgresql restart

- name: "Postgresql | Configure | postgresql.conf | shared_preload_libraries"
  lineinfile:
    path: "{{ pgdg_postgresql_conf_path }}"
    regexp: "#?shared_preload_libraries =.*"
    line: "shared_preload_libraries = '{{ pgdg_shared_preload_libraries |  join(\", \") }}'"
    state: present
  register: pgdg_conf_shared_preload_libraries
  notify: postgresql restart
  become: yes

- name: Timescaledb | Manage | Extension | Create
  become: true
  become_user: postgres
  postgresql_ext:
    name: timescaledb
    db: "{{ item.database }}"
  with_items: "{{ pgdg_users }}"
  when: item.database is defined
